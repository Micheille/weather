{"version":3,"sources":["components/WeatherPast/CardPast/index.tsx","assets/placeholder/Academy-Weather-bg160.svg","components/Intro/index.tsx","components/WeatherPast/index.tsx","components/Weather/index.tsx","components/App/index.tsx","index.tsx"],"names":["months","1","2","3","4","5","6","7","8","9","10","11","12","CardPast","date","icon","temp","dateD","Date","month","getMonth","day","getDate","year","getFullYear","className","src","Math","round","Intro","image","cities","Samara","lat","lon","Tolyatti","Saratov","Kazan","Krasnodar","WeatherPast","useState","city","setCity","setDate","time","setTime","isLoaded","setLoaded","error","setError","setIcon","setTemp","getPastWeather","a","fetch","response","json","data","ok","current","weather","message","useEffect","onChange","e","target","value","disabled","selected","hidden","type","timeMilliseconds","getTime","timeSeconds","floor","Weather","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e6298e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst months: { [key: number]: any } = {\r\n  1: 'jan',\r\n  2: 'feb',\r\n  3: 'mar',\r\n  4: 'apr',\r\n  5: 'may',\r\n  6: 'jun',\r\n  7: 'jul',\r\n  8: 'aug',\r\n  9: 'sep',\r\n  10: 'oct',\r\n  11: 'nov',\r\n  12: 'dec',\r\n};\r\n\r\nexport default function CardPast({\r\n  date,\r\n  icon,\r\n  temp,\r\n}: {\r\n  date: string;\r\n  icon: string;\r\n  temp: number;\r\n}) {\r\n  const dateD = new Date(date);\r\n  const month = months[dateD.getMonth()];\r\n  const day = dateD.getDate();\r\n  const year = dateD.getFullYear();\r\n\r\n  return (\r\n    <section className=\"card\">\r\n      <p className=\"card__date\">{`${day} ${month} ${year}`}</p>\r\n\r\n      <div className=\"card__icon\">\r\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\r\n      </div>\r\n\r\n      <p className=\"card__temp\">{`+ ${Math.round(temp - 273)}`}</p>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Academy-Weather-bg160.1a743710.svg\";","import React from 'react';\r\n\r\nimport image from '../../assets/placeholder/Academy-Weather-bg160.svg';\r\n\r\nimport './style.scss';\r\n\r\nexport default function Intro() {\r\n  return (\r\n    <section className=\"intro\">\r\n      <img src={image} />\r\n      <p className=\"intro__text\">\r\n        Fill in all the fields and the weather will be displayed\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport CardPast from './CardPast';\r\nimport Intro from '../Intro';\r\n\r\nimport './style.scss';\r\n\r\nconst cities: { [key: string]: any } = {\r\n  Samara: {\r\n    lat: 53.195873,\r\n    lon: 50.100193,\r\n  },\r\n  Tolyatti: {\r\n    lat: 53.507836,\r\n    lon: 49.420393,\r\n  },\r\n  Saratov: {\r\n    lat: 51.533557,\r\n    lon: 46.034257,\r\n  },\r\n  Kazan: {\r\n    lat: 55.796127,\r\n    lon: 49.106405,\r\n  },\r\n  Krasnodar: {\r\n    lat: 55.796127,\r\n    lon: 38.975313,\r\n  },\r\n};\r\n\r\nexport default function WeatherPast() {\r\n  const [city, setCity] = useState<string>('');\r\n  const [date, setDate] = useState<string>('');\r\n  const [time, setTime] = useState<number>(0);\r\n  const [isLoaded, setLoaded] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n  const [icon, setIcon] = useState<string>('');\r\n  const [temp, setTemp] = useState<number>(0);\r\n\r\n  const getPastWeather = async (lat: number, lon: number, time: number) => {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${time}&appid=f4ea689bc636fcf4c6e9a08ea5f9f7f8`\r\n    );\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setError(data.message);\r\n      setLoaded(false);\r\n    } else {\r\n      setIcon(data.current.weather[0].icon);\r\n      setTemp(data.current.temp);\r\n      setLoaded(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    city && time && getPastWeather(cities[city].lat, cities[city].lon, time);\r\n  });\r\n\r\n  const onCityChange = (e: React.ChangeEvent<HTMLSelectElement>) =>\r\n    setCity(e.target.value);\r\n\r\n  const onDateChange = (e: React.ChangeEvent<HTMLDataElement>) => {\r\n    setDate(e.target.value);\r\n\r\n    const date = new Date(e.target.value);\r\n    const timeMilliseconds = date.getTime();\r\n    const timeSeconds = Math.floor(timeMilliseconds / 1000);\r\n    setTime(timeSeconds);\r\n  };\r\n\r\n  return (\r\n    <article className=\"weather-past\">\r\n      <section className=\"weather-past__top\">\r\n        <h1 className=\"weather-past__title\">Forecast for a Date in the Past</h1>\r\n\r\n        <section className=\"weather-past__forms\">\r\n          <select className=\"weather-past__select\" onChange={onCityChange}>\r\n            <option value=\"\" disabled selected hidden>\r\n              Select city\r\n            </option>\r\n            <option value=\"Samara\">Самара</option>\r\n            <option value=\"Tolyatti\">Тольятти</option>\r\n            <option value=\"Saratov\">Саратов</option>\r\n            <option value=\"Kazan\">Казань</option>\r\n            <option value=\"Krasnodar\">Краснодар</option>\r\n          </select>\r\n\r\n          <input\r\n            className=\"weather-past__select\"\r\n            type=\"date\"\r\n            onChange={onDateChange}\r\n          />\r\n        </section>\r\n      </section>\r\n\r\n      <section className=\"weather-past__content\">\r\n        {isLoaded ? (\r\n          <CardPast date={date} icon={icon} temp={temp} />\r\n        ) : (\r\n          <Intro />\r\n        )}\r\n        <p className=\"weather-past__error\">\r\n          {!isLoaded && error && `Sorry, ${error}!`}\r\n        </p>\r\n      </section>\r\n    </article>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport WeatherPast from '../WeatherPast';\r\n\r\nimport './style.scss';\r\n\r\nexport default function Weather() {\r\n  return (\r\n    <div className=\"weather\">\r\n      <header className=\"weather__header\">\r\n        <div className=\"weather__title\">\r\n          <h1 className=\"weather__title-word weather__title-word_weather\">\r\n            Weather\r\n          </h1>\r\n          <h1 className=\"weather__title-word weather__title-word_forecast\">\r\n            forecast\r\n          </h1>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"weather__main\">\r\n        <WeatherPast />\r\n      </main>\r\n\r\n      <footer className=\"weather__footer\">\r\n        <p className=\"weather__meta\">С любовью от Mercury Development</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\n\nimport Weather from '../Weather';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}